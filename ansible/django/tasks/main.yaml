---
  - file:
      path: "{{LOGDIR}}"
      state: directory
      mode: 0755
      owner: ubuntu
      group: admin

  - stat: path=requirements
    register: requirements

  - name: "Clone Repo"
    git: repo=git@github.com:ajumasoftware/main-site.git
        dest=/home/ubuntu/app
        accept_hostkey=yes
        force=yes
        recursive=no
        key_file=/home/ubuntu/.ssh/id_rsa
    when: requirements.stat.exists == False
    become: yes
    become_user: ubuntu

#  - name: "Clone Certs"
#    git: repo=git@github.com:gnulnx/certs.git
#        dest=/home/ubuntu/letsencrypt
#        accept_hostkey=yes
#        force=yes
#        recursive=no
#        key_file=/home/ubuntu/.ssh/home_rsa
#    when: requirements.stat.exists == False
#    become: yes
#    become_user: ubuntu
#
#  - name: "Remove /etc/letsencrypt if it exists"
#    shell: sudo rm -rf /etc/letsencrypt
#
#  - name: "Copy letsencrypt directory to /etc"
#    shell: sudo cp -r /home/ubuntu/letsencrypt /etc/letsencrypt
#
#  - name: "Give full permissions to directory"
#    shell: sudo chmod -R 777 /etc/letsencrypt; sudo chmod -R 777 /etc/letsencrypt/*

  - name: "Setup python3 virtual env"
    shell: "python3 -m venv {{VIRTUALENV}}"
    become: yes
    become_user: ubuntu

  - name: "Install virtualenv and requirements"
    become: yes
    become_user: ubuntu
    pip:
      requirements: "{{REQUIREMENTS}}"
      state: latest
      virtualenv: "{{VIRTUALENV}}"
      virtualenv_python: python3

  - name: "Run initial django migration"
    shell: "{{PYTHON}} manage.py migrate"
    args: 
        chdir: "{{DJANGODIR}}"
    ignore_errors: True
    become: yes
    become_user: ubuntu
    retries: 10
    delay: 1
    register: result
    until: result|succeeded
    when: PLATFORM == 'standalone'

  - name: "Install fixture data"
    shell: "{{PYTHON}} manage.py loaddata fixtures.json"
    args:
        chdir: "{{DJANGODIR}}"
    become: yes
    become_user: ubuntu
    retries: 10
    delay: 1
    register: result
    until: result|succeeded
    when: PLATFORM == 'standalone'
  
  - name: "run collectstatic"
    shell: "{{PYTHON}} manage.py collectstatic --noinput"
    args:
        chdir: "{{DJANGODIR}}"
    become: yes
    become_user: ubuntu

