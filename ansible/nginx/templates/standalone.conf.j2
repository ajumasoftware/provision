upstream ajuma {
    server unix:/tmp/gunicorn.sock fail_timeout=0;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;
    return 301 https://$http_host/;
}

server {
    server_name {{DOMAIN}};
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # These lines are added by certbot
    ssl_certificate /etc/letsencrypt/live/{{DOMAIN}}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{DOMAIN}}/privkey.pem;

    # Config from: https://www.bjornjohansen.no/optimizing-https-nginx
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 60m;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DHE+AES128:!ADH:!AECDH:!MD5;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    add_header Strict-Transport-Security "max-age=31536000" always;

    root /usr/share/nginx/www;
    index index.html index.htm;

    # Flat out reject these lame attacks
    if ($http_user_agent ~* jorgee|morfeus|masscan|python-requests|curl|apache) {
        return 403;
    }

    location / {
        # To put the site in maintenance mode simply 'touch /home/ubuntu/maintenance.html'
        if (-f /home/ubuntu/maintenance.html) {
            return 503;
        }
        # First attempt to serve request as file, then
        # as directory, then fall back to index.html
        proxy_set_header    X-Real-IP   $remote_addr;
        proxy_set_header    Host        $http_host;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://ajuma/;  #ajuma is an upstream hook either gunicorn or uwsgi
        proxy_redirect http://ajuma/ $scheme://$host/;
        proxy_set_header Connection '';
        proxy_intercept_errors on;
        proxy_http_version 1.1;
        chunked_transfer_encoding off;
        client_max_body_size 20M;
    }

    location /static/ {
        alias /home/ubuntu/static/;
    }
}
